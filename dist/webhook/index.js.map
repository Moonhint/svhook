{"version":3,"sources":["../../app/webhook/index.js"],"names":["module","exports","default_settings","server","opts","app","serverApp","http","execa"],"mappings":"AAAA;;AAGA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;AACA;;AAEAA,OAAOC,OAAP,GAAkBC,gBAAD,IAAsB;;AAErC,SAAO;AACLC,YAASC,IAAD,IAAU;AAChB;AACA,UAAIC,MAAM,wBAAV;AACA,UAAIC,YAAY,mBAAW,EAAEJ,gBAAF,EAAoBG,GAApB,EAAyBD,IAAzB,EAA+BG,oBAA/B,EAAqCC,sBAArC,EAAX,CAAhB;AACA,aAAOF,SAAP;AACD;AANI,GAAP;AAQD,CAVD;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAlCA","file":"index.js","sourcesContent":["'use strict';\n\n\nimport express    from 'express';\nimport http       from 'http';\nimport execa      from 'execa';\n\n// import { spawn } from 'child_process';\nimport { Server } from './server.js';\n// import { MessagingAction }    from './action.helper';\n// import { MessagingUtil }      from './util.helpers';\n\nmodule.exports = (default_settings) => {\n\n  return {\n    server: (opts) => {\n      //TODO: validate if opts.port exist\n      let app = express();\n      let serverApp = new Server({ default_settings, app, opts, http, execa });\n      return serverApp;\n    }\n  };\n};\n\n\n\n//\n// const { spawn } = require('child_process');\n// const ls = spawn('ls', ['-la']);\n//\n// ls.stdout.on('data', (data) => {\n//   console.log(`stdout: ${data}`);\n// });\n//\n// ls.stderr.on('data', (data) => {\n//   console.log(`stderr: ${data}`);\n// });\n//\n// ls.on('close', (code) => {\n//   console.log(`child process exited with code ${code}`);\n// });\n//# sourceMappingURL=index.js.map\n"]}