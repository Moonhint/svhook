{"version":3,"sources":["../../app/webhook/server.js"],"names":["Server","constructor","default_settings","app","opts","http","execa","hook","params","materials","options","i","length","route","get","material","bash_scripts","req","res","result","shell","console","log","stdout","send","webhook_name","server","createServer","listen","port","info"],"mappings":";;;;;;;;AAAO,MAAMA,MAAN,CAAa;;AAElB;AACAC,cAAY,EAAEC,gBAAF,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,KAArC,KAA+C,EAA3D,EAA+D;AAC7D;AACA,SAAKJ,gBAAL,GAAwBA,gBAAxB;;AAEA;AACA,SAAKC,GAAL,GAAWA,GAAX;;AAEA;AACA,SAAKC,IAAL,GAAYA,IAAZ;;AAEA;AACA,SAAKC,IAAL,GAAYA,IAAZ;;AAEA;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;;AAEDC,OAAKC,MAAL,EAAa;AAAA;;AACX;AACA;;;;;;;;;;AAUA,UAAMC,YAAYD,OAAOC,SAAzB;AACA,UAAMC,UAAUF,OAAOE,OAAvB;;AAEA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,UAAUG,MAA9B,EAAsCD,GAAtC,EAA2C;AACzC,WAAKR,GAAL,CAASU,KAAT,CAAgB,WAAUJ,UAAUE,CAAV,EAAa,aAAb,CAA4B,EAAtD,EAAyDG,GAAzD,CAA6D,CAC3D,MAAM;;AAEJ,YAAIC,WAAWN,UAAUE,CAAV,CAAf;AACA,YAAIK,eAAeD,SAASC,YAA5B;;AAEA;AAAA,uCAAO,WAAOC,GAAP,EAAYC,GAAZ,EAAoB;;AAEzB,gBAAIC,MAAJ;;AAEA,iBAAK,IAAIR,IAAI,CAAb,EAAgBA,IAAIK,aAAaJ,MAAjC,EAAyCD,GAAzC,EAA8C;AAC5CQ,uBAAS,MAAM,MAAKb,KAAL,CAAWc,KAAX,CAAiBJ,aAAaL,CAAb,CAAjB,CAAf;AACAU,sBAAQC,GAAR,CAAYH,OAAOI,MAAnB;AACD;;AAEDL,gBAAIM,IAAJ,CAAU,GAAET,SAASU,YAAa,KAAlC;AAED,WAXD;;AAAA;AAAA;AAAA;AAAA;AAaD,OAnB0D,GAA7D;AAqBD;;AAED;AACA,QAAIC,SAAS,KAAKrB,IAAL,CAAUsB,YAAV,CAAuB,KAAKxB,GAA5B,CAAb;;AAEAuB,WAAOE,MAAP,CAAc,KAAKxB,IAAL,CAAUyB,IAAxB,EAA8B,MAAM;AAClCR,cAAQS,IAAR,CAAc,kBAAiB,KAAK1B,IAAL,CAAUyB,IAAK,EAA9C;AACD,KAFD;AAID;AAlEiB,C,QAAP7B,M,GAAAA,M;AAmEZ","file":"server.js","sourcesContent":["export class Server {\n\n  // Depedency Injection:\n  constructor({ default_settings, app, opts, http, execa } = {}) {\n    // configuration default_settings\n    this.default_settings = default_settings;\n\n    // express app\n    this.app = app;\n\n    // server options\n    this.opts = opts;\n\n    // http client\n    this.http = http;\n\n    // spawn child process\n    this.execa = execa;\n  }\n\n  hook(params) {\n    //init all routes\n    /*\n    material {\n      {\n        webhook_name: webhook_name,\n        webhook_url: webhook_url,\n        bash_scripts: []\n      }\n    }\n    */\n\n    const materials = params.materials;\n    const options = params.options;\n\n    for (var i = 0; i < materials.length; i++) {\n      this.app.route(`/svhook/${materials[i][\"webhook_url\"]}`).get((\n        () => {\n\n          let material = materials[i];\n          let bash_scripts = material.bash_scripts;\n\n          return async (req, res) => {\n\n            let result;\n\n            for (var i = 0; i < bash_scripts.length; i++) {\n              result = await this.execa.shell(bash_scripts[i]);\n              console.log(result.stdout);\n            }\n\n            res.send(`${material.webhook_name} ok`);\n            \n          }\n\n        }\n      )());\n    }\n\n    //up server\n    let server = this.http.createServer(this.app);\n\n    server.listen(this.opts.port, () => {\n      console.info(`svhook at port ${this.opts.port}`);\n    });\n\n  }\n};\n"]}