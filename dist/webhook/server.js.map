{"version":3,"sources":["../../app/webhook/server.js"],"names":["Server","constructor","default_settings","app","body_parser","opts","http","execa","cache","shell","server","execution_queue","svhook_dir","process","cwd","init_queue_outlook","self","console","log","setInterval","outlooking_for_queue","length","queue_item","shift","lock","get","path","unshift","run_instructions","instructions","options","hook","params","configs","materials","route_prefix","print_req_body","use","urlencoded","extended","limit","json","i","route","post","material","bash_scripts","req","res","body","send","webhook_name","ignore_execution","material_branches","only_branches","body_ref","ref","undefined","git_refs_arr","split","source_branch","founded_branch_index","indexOf","push","createServer","listen","port","info","instuctions","put","curr_bash_script","print_and_execute","env","cd","script","result","current_directory","startsWith","stdout","e","error"],"mappings":"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","file":"server.js","sourcesContent":["export class Server {\n\n  // Depedency Injection:\n  constructor({ default_settings, app, body_parser, opts, http, execa, cache, shell } = {}) {\n    // configuration default_settings\n    this.default_settings = default_settings;\n\n    // express app\n    this.app = app;\n\n    // body parser helper\n    this.body_parser = body_parser;\n\n    // server options\n    this.opts = opts || default_settings.server;\n\n    // http client\n    this.http = http;\n\n    // spawn child process\n    this.execa = execa;\n\n    // memory cache\n    this.cache = cache;\n\n    // shell\n    this.shell = shell;\n\n    // execution queue\n    this.execution_queue = [];\n\n    // svhook_dir saved for later usage\n    this.svhook_dir = process.cwd();\n\n    // start queue outlook\n    this.init_queue_outlook();\n\n  }\n\n  init_queue_outlook(){\n    let self = this;\n    console.log(\"\\n<----- Init QUEUE OUTLOOK ----->\\n\");\n\n    setInterval(()=>{\n      self.outlooking_for_queue();\n    }, 2000);\n  }\n\n  outlooking_for_queue(){\n    if (this.execution_queue.length > 0){\n      let queue_item = this.execution_queue.shift();\n      let lock = this.cache.get(`lock-deployment`);\n      if (lock){\n        console.log(`\\n<----- REQUEUE ${queue_item.path} again because deployment it is still in lockdown ----->\\n`);\n        this.execution_queue.unshift(queue_item);\n      }else{\n        console.log(`\\n<----- UNQUEUE ${queue_item.path} and executing ----->\\n`)\n        this.run_instructions(queue_item.instructions, queue_item.path, queue_item.options);\n      }\n    }\n  }\n\n  hook(params) {\n    const configs = params || this.default_settings.hook;\n    const materials = configs.materials;\n    const options = configs.options || this.default_settings.hook.options;\n\n    //init all server options fallback variable\n    const route_prefix = this.opts.route_prefix || this.default_settings.server.route_prefix;\n    const print_req_body = this.opts.print_req_body || this.default_settings.server.print_req_body;\n\n    //body parser middleware\n    this.app.use(this.body_parser.urlencoded({ extended: true , limit: '500mb'}));\n    this.app.use(this.body_parser.json({limit: '500mb'}));\n\n    for (var i = 0; i < materials.length; i++) {\n      this.app.route(`/${route_prefix}/${materials[i][\"webhook_url\"]}`).post((\n        () => {\n\n          let material = materials[i];\n          let bash_scripts = material.bash_scripts;\n\n          return async (req, res) => {\n\n            if (print_req_body){\n              console.log(req.body);\n            }\n            \n            res.send(`${material.webhook_name} ok`);\n            \n            let ignore_execution = false;\n\n            let material_branches = material.only_branches;\n            let body_ref = req.body.ref;\n\n            // check for eligible branches if specifed\n            if (material_branches !== undefined && body_ref !== undefined){\n              let git_refs_arr = body_ref.split('/');\n              let source_branch = git_refs_arr[git_refs_arr.length - 1];\n              let founded_branch_index = material_branches.indexOf(source_branch)\n              if (founded_branch_index === -1){\n                // not found in eligible to execute branches, so will ignore execution\n                ignore_execution = true;\n                console.log(`<----- [Ignore Execute] reason: not eligible branch ------>`);\n              }\n            }\n            \n            if (!ignore_execution) {\n\n              if (this.cache.get(`lock-deployment`)){\n                this.execution_queue.push({\n                  path: req.route.path,\n                  instructions: bash_scripts,\n                  options: options\n                });\n              }else{\n                this.run_instructions(bash_scripts, req.route.path, options);\n              }\n\n            }\n\n          }\n\n        }\n      )());\n    }\n\n    // add home route\n    this.app.route('/').get((req, res)=>{\n      res.send(`svhook`);\n    });\n\n    //up server\n    let server = this.http.createServer(this.app);\n\n    server.listen(this.opts.port, () => {\n      console.info(`svhook at port ${this.opts.port}`);\n    });\n\n  }\n\n  async run_instructions(instuctions, path, options){\n\n    this.cache.put(`lock-deployment`, true);\n    console.log(`\\n<----- [Start Running Instruction] for: ${path} ------>\\n`);\n\n    for (var i = 0; i < instuctions.length; i++) {\n      let curr_bash_script = instuctions[i];\n      \n      await this.print_and_execute(curr_bash_script, options.env);\n      \n      if (i === instuctions.length-1){\n        console.log(`\\n<----- [Finish Running Instruction] for: ${path} ------>\\n`);\n        this.cache.put(`lock-deployment`, false);\n\n        console.log(`\\n<----- [Reset Directory] to: ${this.svhook_dir} ------>\\n`);\n        this.shell.cd(this.svhook_dir);\n      }\n\n      // if (curr_bash_script.lookout){\n      //   // TODO: review lookout execution, for sync\n      //   let last_lookout = this.cache.get(curr_bash_script.lookout);\n      //   let lookout_script = curr_bash_script.script;\n\n      //   if (last_lookout === null){\n      //     this.cache.put(curr_bash_script.lookout, 1, options.lookout_execution_delay, async (key, value) => {\n      //       console.info(`Script of \"${key}\" was stacked ${value} times before execution!`);\n      //       this.print_and_execute(lookout_script, options.env);\n      //     });\n      //   }else{\n      //     this.cache.del(curr_bash_script.lookout);\n      //     this.cache.put(curr_bash_script.lookout, last_lookout+1, options.lookout_execution_delay, async (key, value) => {\n      //       console.info(`Script of \"${key}\" was stacked ${value} times before execution!`);\n      //       this.print_and_execute(lookout_script, options.env);\n      //     });\n      //   }\n      //   console.info(`\\nLooking out for another script with key \"${curr_bash_script.lookout}\"`);\n      //   console.info(`If none is provided in ${(options.lookout_execution_delay/60000).toFixed(2)} minutes I will execute the script...\\n`);\n      // }else{\n      //   await this.print_and_execute(curr_bash_script, options.env);\n      // }\n    }\n  }\n\n  async print_and_execute(script, env){\n\n    let result;\n    let current_directory = process.cwd();\n\n    if (script.startsWith('cd')){\n      let path = script.split(\" \")[1];\n      console.log(`\\n<----- [Change Directory to ${current_directory}/${path}] ${script} ------>\\n`);\n      this.shell.cd(`${current_directory}/${path}`);\n    }else{\n      try {\n        console.log(`<----- [Execute] ${script} ------>`);\n        result = await this.execa.shell(script, {env});\n        console.log(`<----- [Execution Output] ${script} ------>\\n`);\n        console.log(`${result.stdout}\\n\\n`);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n  }\n\n};\n"]}