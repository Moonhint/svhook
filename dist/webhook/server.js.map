{"version":3,"sources":["../../app/webhook/server.js"],"names":["Server","constructor","default_settings","app","body_parser","opts","http","execa","cache","server","hook","params","configs","materials","options","use","urlencoded","extended","limit","json","i","length","route","post","material","bash_scripts","req","res","send","webhook_name","result","curr_bash_script","lookout","last_lookout","get","lookout_script","script","put","lookout_execution_delay","key","value","console","info","print_and_execute","env","del","toFixed","createServer","listen","port","log","shell","stdout","e","error"],"mappings":"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","file":"server.js","sourcesContent":["export class Server {\n\n  // Depedency Injection:\n  constructor({ default_settings, app, body_parser, opts, http, execa, cache } = {}) {\n    // configuration default_settings\n    this.default_settings = default_settings;\n\n    // express app\n    this.app = app;\n\n    // body parser helper\n    this.body_parser = body_parser;\n\n    // server options\n    this.opts = opts || default_settings.server;\n\n    // http client\n    this.http = http;\n\n    // spawn child process\n    this.execa = execa;\n\n    // memory cache\n    this.cache = cache;\n  }\n\n  hook(params) {\n    const configs = params || this.default_settings.hook;\n\n    //init all routes\n    const materials = configs.materials;\n    const options = configs.options || this.default_settings.hook.options;\n\n    //body parser middleware\n    this.app.use(this.body_parser.urlencoded({ extended: true , limit: '500mb'}));\n    this.app.use(this.body_parser.json({limit: '500mb'}));\n\n    for (var i = 0; i < materials.length; i++) {\n      this.app.route(`/svhook/${materials[i][\"webhook_url\"]}`).post((\n        () => {\n\n          let material = materials[i];\n          let bash_scripts = material.bash_scripts;\n\n          return async (req, res) => {\n\n            res.send(`${material.webhook_name} ok`);\n\n            let result;\n\n            for (var i = 0; i < bash_scripts.length; i++) {\n              let curr_bash_script = bash_scripts[i];\n\n              if (curr_bash_script.lookout){\n                let last_lookout = this.cache.get(curr_bash_script.lookout);\n                let lookout_script = curr_bash_script.script;\n\n                if (last_lookout === null){\n                  this.cache.put(curr_bash_script.lookout, 1, options.lookout_execution_delay, async (key, value) => {\n                    console.info(`Script of \"${key}\" was stacked ${value} times before execution!`);\n                    this.print_and_execute(lookout_script, options.env);\n                  });\n                }else{\n                  this.cache.del(curr_bash_script.lookout);\n                  this.cache.put(curr_bash_script.lookout, last_lookout+1, options.lookout_execution_delay, async (key, value) => {\n                    console.info(`Script of \"${key}\" was stacked ${value} times before execution!`);\n                    this.print_and_execute(lookout_script, options.env);\n                  });\n                }\n                console.info(`\\nLooking out for another script with key \"${curr_bash_script.lookout}\"`);\n                console.info(`If none is provided in ${(options.lookout_execution_delay/60000).toFixed(2)} minutes I will execute the script...\\n`);\n              }else{\n                this.print_and_execute(curr_bash_script, options.env);\n              }\n            }\n\n          }\n\n        }\n      )());\n    }\n\n    //up server\n    let server = this.http.createServer(this.app);\n\n    server.listen(this.opts.port, () => {\n      console.info(`svhook at port ${this.opts.port}`);\n    });\n\n  }\n\n  async print_and_execute(script, env){\n\n    let result;\n\n    try {\n      console.log(`<----- [Execute] ${script} ------>`);\n      result = await this.execa.shell(script, {env});\n      console.log(`<----- [Execution Output] ${script} ------>\\n`);\n      console.log(`${result.stdout}\\n\\n`);\n    } catch (e) {\n      console.error(e);\n    }\n\n  }\n\n};\n"]}